name: Announce Release in Slack

on: 
  release:
    types: 
      - published

jobs:
  slack:
    name: Slack - Notify on every release
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Get version of last and previous release
        uses: actions/github-script@v3
        id: versions
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name) {
                releases(first: 2, orderBy: {field: CREATED_AT, direction: DESC}) {
                  nodes {
                    name
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo
            };
            const { repository: { releases: { nodes } } } = await github.graphql(query, variables);
            core.setOutput('lastver', nodes[0].name);
            // In case of first release in the package, there is no such thing as previous error, so we set info about previous version only once we have it
            // We should send message to slack about the release no matter of the type as it is initial release
            if (nodes.length != 1) core.setOutput('previousver', nodes[1].name);

      - name: Identify release type
        id: releasetype
        # if previousver is not provided then this steps just logs information about missing version, no errors
        run: echo "::set-output name=type::$(npx -q -p semver-diff-cli semver-diff ${{steps.versions.outputs.previousver}} ${{steps.versions.outputs.lastver}})"

      - name: Get name of the person that is behind the newly released version
        id: author
        run: echo "::set-output name=name::$(git log -1 --pretty=format:'%an')"

      - name: Convert markdown to slack markdown for issue
        uses: LoveToKnow/slackify-markdown-action@v1.0.0
        id: markdown
        with:
            text: "\nWhat's changed?\n\n ${{ github.event.release.body }}\n\nThank you for the contribution ${{ steps.author.outputs.name }}\n${{github.event.release.html_url}}"

      - name: Send info about release to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_CHANNEL_WEBHOOK }}
            SLACK_TITLE: Release ${{github.event.release.tag_name}} for ${{github.repository}} is out in the wild üò±üí™üçæüéÇ
            SLACK_MESSAGE: ${{steps.markdown.outputs.text}}
            MSG_MINIMAL: true