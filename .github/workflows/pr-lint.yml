name: JavaScript and CSS Linting

on:
    pull_request:
        branches:
            - main

jobs:
    # Runs the JavaScript coding standards checks.
    #
    # Performs the following steps:
    # - Checks out the repository.
    # - Logs debug information about the runner container.
    # - Installs NodeJS 14.
    # - Logs updated debug information.
    # _ Installs NPM dependencies using install-changed to hash the `package.json` file.
    # - Run the WP-Script Lint-JS/Format.
    # - Commit formatted files if needed.
    lint:
        name: WP-Scripts Lint/Format
        runs-on: ubuntu-latest
        steps:
            - name: Check out Git repository
              uses: actions/checkout@v2

            - name: Check if project has Package.json
              id: package-json-config
              run: ( test -e ./package.json ) && echo "::set-output name=exists::true" || echo "::set-output name=exists::false"

            - name: Set up Node.js
              if: steps.package-json-config.outputs.exists == 'true'
              uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - name: Install latest NPM version
              if: steps.package-json-config.outputs.exists == 'true'
              run: npm i -g npm@latest

            - name: Restore node_modules
              if: steps.package-json-config.outputs.exists == 'true'
              uses: actions/cache@v2
              id: node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

            - name: Get npm cache directory
              if: steps.package-json-config.outputs.exists == 'true' &&
                  steps.node-modules.outputs.cache-hit != 'true'
              id: npm-cache
              run: echo "::set-output name=dir::$(npm config get cache)"

            - name: Restore .npm cache
              if: steps.package-json-config.outputs.exists == 'true' &&
                  steps.node-modules.outputs.cache-hit != 'true'
              uses: actions/cache@v2
              with:
                  path: ${{ steps.npm-cache.outputs.dir }}
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                      ${{ runner.os }}-node-

            # ESLint and Prettier must be in `package.json`
            - name: Install Node.js dependencies
              if: steps.package-json-config.outputs.exists == 'true'
              run: npm ci

            - name: Run WP-Scripts Lint/Format
              if: steps.package-json-config.outputs.exists == 'true'
              uses: sixach/wp-scripts-lint-action@v2
              with:
                  format: true
                  format_args: ./src
                  lint_js: true
                  lint_js_args: ./src
                  lint_style: true
                  fix_mode: true
